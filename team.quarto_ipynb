{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Ames, Iowa\"\n",
        "author: \"Group 7\"\n",
        "format: \n",
        "  dashboard:\n",
        "    nav-buttons:\n",
        "      - icon: github\n",
        "        href: https://github.com/AhyeongJ/lsbigdata_project1\n",
        "---"
      ],
      "id": "b576b896"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import os\n",
        "cwd = os.getcwd()\n",
        "print(cwd)"
      ],
      "id": "6bd3983d",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns \n",
        "\n",
        "house_price = pd.read_csv(\"./data/houseprice-with-lonlat.csv\")\n",
        "house_price = house_price.iloc[:,1:]\n",
        "house_price['Neighborhood'].unique()"
      ],
      "id": "5429f6a9",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "# Group 별 차트 1  \n",
        "\n",
        "job = pd.read_csv(\"./data/Occupations.csv\")\n",
        "job = job.iloc[:, :4]\n",
        "job_group = job.groupby('Group', as_index = False)\\\n",
        "               .agg(n = ('Group', 'count'))\n",
        "\n",
        "import plotly.express as px\n",
        "\n",
        "# 파이 차트 생성\n",
        "fig = px.pie(job_group, names='Group', values='n',\n",
        "              color_discrete_sequence=px.colors.sequential.Cividis_r)\n",
        "\n",
        "fig.update_traces(hole=.4, textinfo='percent')\n",
        "\n",
        "\n",
        "# 레이아웃 설정\n",
        "fig.update_layout(\n",
        "    title={'text': \"<span style='color:black;font-weight:bold;'>Pie Chart 1</span>\", 'x': 0.5, 'xanchor': 'center'},\n",
        "    annotations=[dict(text='Group', x=0.5, y=0.5, font_size=20, showarrow=False)],\n",
        "    legend=dict(\n",
        "        orientation=\"h\",  # 범례를 수평으로 배치\n",
        "        yanchor=\"top\",    # 범례를 상단에 맞추기\n",
        "        y=-0.2,           # 차트 아래로 범례를 이동\n",
        "        xanchor=\"center\", # 범례를 수평 중앙에 맞추기\n",
        "        x=0.5             # 범례를 수평 중앙에 맞추기\n",
        "    )\n",
        ")"
      ],
      "id": "9524ee9e",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "job2 = job.query('Group == \"Management, Business, Science, & Arts Occupations\"')\n",
        "subgroup = job2.groupby('Subgroup', as_index = False)\\\n",
        "               .agg(n = ('Subgroup', 'count'))\n",
        "\n",
        "\n",
        "fig = px.pie(subgroup, names='Subgroup', values='n',\n",
        "              color_discrete_sequence=px.colors.sequential.Cividis_r)\n",
        "\n",
        "fig.update_traces(hole=.4, textinfo='percent')\n",
        "\n",
        "\n",
        "# 레이아웃 설정\n",
        "fig.update_layout(\n",
        "    title={'text': \"<span style='color:black;font-weight:bold;'>Pie Chart 2 - Management, Business, Science, & Arts Occupations </span>\", 'x': 0.5, 'xanchor': 'center'},\n",
        "    annotations=[dict(text='Chart2', x=0.5, y=0.5, font_size=20, showarrow=False)],\n",
        "    legend=dict(\n",
        "        orientation=\"h\",  # 범례를 수평으로 배치\n",
        "        yanchor=\"top\",    # 범례를 상단에 맞추기\n",
        "        y=-0.2,           # 차트 아래로 범례를 이동\n",
        "        xanchor=\"center\", # 범례를 수평 중앙에 맞추기\n",
        "        x=0.5             # 범례를 수평 중앙에 맞추기\n",
        "    )\n",
        ")"
      ],
      "id": "57efb2fc",
      "execution_count": null,
      "outputs": []
    },
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "<아이오와 에임즈 지도>"
      ],
      "id": "3d5d03e2"
    },
    {
      "cell_type": "code",
      "metadata": {},
      "source": [
        "import geopandas as gpd\n",
        "import fiona\n",
        "import os\n",
        "import matplotlib.pyplot as plt\n",
        "from shapely.geometry import Point\n",
        "import osmnx as ox\n",
        "\n",
        "\n",
        "user_name = os.getlogin()\n",
        "user_name\n",
        "\n",
        "gdb_path = f\"C:\\\\Users\\\\{user_name}\\\\Desktop\\\\JoinedData.gdb\\\\a00000009.gdbtable\"\n",
        "\n",
        "gdf = gpd.read_file(gdb_path)\n",
        "print(gdf.columns)\n",
        "\n",
        "iowa_gdf = gdf[gdf['State_Name'] == 'Iowa']\n",
        "iowa_gdf[\"geometry\"]\n",
        "\n",
        "print(iowa_gdf.columns)\n",
        "gdf[\"geometry\"]\n",
        "print(gdf.describe(include='all'))\n",
        "iowa_gdf.to_file(f\"C:\\\\Users\\\\{user_name}\\\\Desktop\\\\iowa_block_groups.geojson\", driver=\"GeoJSON\")\n",
        "\n",
        "\n",
        "#메타 폴리곤으로 되어 있는 lon,lat 값 때문에 plt.plot 낫 이지\n",
        "#gdf.plot(colum,cmap,color,edgecolor,alpha,figsize)\n",
        "\n",
        "iowa_gdf = gpd.read_file(f\"C:\\\\Users\\\\{user_name}\\\\Desktop\\\\iowa_block_groups.geojson\")\n",
        "bgm = gdf.plot(color='lightgrey', edgecolor='grey', alpha=0.6, figsize=(10, 10))\n",
        "\n",
        "iowa_gdf.plot(ax=bgm, color='red', edgecolor='red', linewidth=1.5)\n",
        "\n",
        "plt.show()\n",
        "plt.clf()\n",
        "#묶인거 제거하기\n",
        "#알래스카,하와이 제거 하기\n",
        "#미국 지도에 아이오와 찍기\n",
        "#아이오와 구획별 경계 지도에 표시 해보기\n",
        "#long,lat 으로 구획 구분\n",
        "gdf[gdf['State_Name'] == 'Puerto Rico']\n",
        "gdf['State_Name'].unique()\n",
        "island = [\"Hawaii\", \"Alaska\",\"Puerto Rico\"]\n",
        "\n",
        "mainland_gdf = gdf[~gdf['State_Name'].isin(island)]\n",
        "\n",
        "bgm = mainland_gdf.plot(color='lightgrey', edgecolor='grey', alpha=0.6, figsize=(10, 10))\n",
        "iowa_gdf.plot(ax=bgm, color='green', edgecolor='green', linewidth=1.5)\n",
        "plt.show()\n",
        "plt.clf()\n",
        "\n",
        "\n",
        "iowa_gdf.plot( color='None', edgecolor='green', linewidth=0.1)\n",
        "plt.xlim=([-104.5,-104.2])\n",
        "plt.ylim=([50.8,51.5])\n",
        "'''\n",
        "latitude = 53.5508\n",
        "longitude = -101.80\n",
        "point = Point(longitude, latitude)  # 경도, 위도 순서로 입력\n",
        "containing_block = gdf[gdf.contains(point)]\n",
        "'''\n",
        "plt.clf()\n",
        "iowa_gdf.plot( color='None', edgecolor='green', linewidth=1.5)\n",
        "\n",
        "iowa_gdf.columns\n",
        "\n",
        "ames_gdf = iowa_gdf[iowa_gdf.apply(lambda row: row.astype(str).str.contains('Ames', case=False).any(), axis=1)]\n",
        "print(ames_gdf)\n",
        "\n",
        "\n",
        "ames_gdf = ox.geocode_to_gdf(\"Ames, Iowa, USA\")\n",
        "\n",
        "ames_blocks = iowa_gdf[iowa_gdf.intersects(ames_gdf.unary_union)]\n",
        "\n",
        "ames_blocks.plot(color='None', edgecolor='green', linewidth=0.1)\n",
        "plt.show()"
      ],
      "id": "ea6b223b",
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "C:\\DS\\miniconda3\\envs\\lsbigdata-project1\\share\\jupyter\\kernels\\python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}